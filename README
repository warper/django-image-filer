PRE-ALPHA

Requirements:
- PIL
- mptt
- sorl.thumbnail
- django 1.1
- (south) not a requirement, but handy

for cms integration:
- django-cms-2.0

Setup
- add 'image_filer' to INSTALLED_APPS
- make the directory 'image_filer' (found in image_filer/media/') available in MEDIA_ROOT
- optional: configure IMAGE_FILER_MEDIA_URL in your project's settings.py to the URL
  where image_filer-media can be found (usually MEDIA_URL+'image_filer/' which is the
  default)


To use the example project virtualenv and pip can be used to setup a test environment:
 - mkdir example/virtualenv
 - virtualenv example/virtualenv/image_filer
 - pip -E example/virtualenv/image_filer install -r requirements.pip
 	- now you will have a virtualenv with mptt, sorl, south and django installed
 - symlink or checkout the other dependencies into the virtualenv (example/virtualenv/image_filer/lib/python2.5/site-packages/)
 - source example/virtualenv/image_filer/bin/activate
 	- now the virtualenv is active... and syncdb/runserver can be run with ./manage.py

Custom plugins using image folders
==================================
To customize a slideshow as shown in cms_plugins.FolderSlideshowPlugin, just do
the following in your own project:

- create a file 'cms_plugins.py' in your application root (where models.py resides):

        from cms.plugin_pool import plugin_pool
        from django.utils.translation import ugettext_lazy as _
        from image_filer.cms_plugins import FolderSlideshowPlugin
        
        class CustomSlideshowPlugin(FolderSlideshowPlugin):
            name = _("Custom slideshow")
            class Meta:
                proxy = True
            render_template = "slideshow.html"
        plugin_pool.register_plugin(CustomSlideshowPlugin)

- create an appropriate 'templates/slideshow.html' relative to your application's
  root (look at 'image_filer/slideshow2.html' for guidance)